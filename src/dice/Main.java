
package dice;

import java.util.Arrays;

public class Main {

	public static void main(String[] args) {
		boolean debug = false;
		
		// 25%, EI JÄTA MÄNDA ALLES KUI KA TULI 2 MÄNDA PÄRAST ESIMEST VEERETAMIST
		
		// MUL ON OLEMAS 2 ÕIGET, VEERETAN TEISED UUESTI
		// EHK 3 + 3 TÄRINGUT VISATA
		// KUI SAAN ÜHE MÄNNA, SIIS SEDA ALLES EI JÄTA, ÕIGED JÄTAN!
		// VÕIDU TINGIMUSED:
		// 1) SAAN 2 ÕIGET
		// 2) SAAN 3 ÕIGET
		// 3) SAAN 2 MÄNDA ja 1 ÕIGE
		// ehk
		// 1) 1 + 1
		// 2) 1 + 1 + 1
		// 3) 6 + 6 + 1
		
		// MUL ON OLEMAS 2 ÕIGET, MÄND, VEERETAN TEISED UUESTI
		// EHK 2 + 2 TÄRINGUT VISATA
		// KUI SAAN TEISE MÄNNA, SIIS SELLE JÄTAN KA ALLES JA VEERETAN VIIMAST TÄRINGUT ERALDI
		// VÕIDU TINGIMUSED:
		// 1) MÄND + ÕIGE
		// 2) ÕIGE + ÕIGE (2 ÕIGET)
		// ehk
		// 1) 6 + 1
		// 2) 1 + 1
		
		// mida veel kontrollida, 3tk 4st õiged ja 1 mänd käes, kas on mõtet mända alles jätta
		
		// parameetrid:
		int sides = 6; // täringul on 6 tahku
		int dicesOriginal = 3; // 5 // mitu täringut (nii mitme täringu kaupa viskan (nt 5 korraga))
		int triesOriginal = 2; // 3 // mitu proovi (e mitu korda võimalus täringuid visata)
		//int goalAmount = 2; // mitu õiget (peab olema kõigist (kas jahin 5t õiget 5st vmt))
		int rolls = 10000000; // viskan täringuid miljon korda kokku (per 1 täring)
		int series = rolls / (dicesOriginal * triesOriginal); // viskan täringut nii mitu seeriat (nt 5 täringut korraga)
		int wantNumber = 1;
		int jokerNumber = 6;
		
		// ajutised kohahoidjad:
		int dicesTemp;
		int triesTemp;
		int rollResult = 0; // ühe veeretuse tulemus
		int numbers[] = new int[5]; // massiiv täringute tulemuse jaoks
//		int alreadyCorrect = 0; // mitu täringut olen õigesti juba ära visanud
		
		// lõpptulemused:
		int totalTimesSuccessful = 0; // mitu korda olin edukas oma üldeesmärgi saavutamisel
		
		int jokers;
		int wantNumbers;
		
		// 5te täringut viskan nt 60 tuhat korda (miljon total vmt)
		// üks seeria on näiteks 3 korda 5 täringut visata
		for(int i = 0; i < series; i++){
			if(debug){
				System.out.println();
			}
			// uus visketsükkel ja numbritel reset, kuna uus katse (5 täringut, 3 katset)
			triesTemp = triesOriginal; 
			dicesTemp = dicesOriginal;
//			alreadyCorrect = 0;

			wantNumbers = 0;
			// senikaua viskan kuni visete kordi veel on JA veel on vaja saada õigeid täringuid juurde
			//while(triesTemp > 0 && alreadyCorrect < goalAmount){ // NB! &&, muidu timestothrow läheb negatiivseks kuna pole veel saanud vajaminevaid tulemusi
			while(triesTemp > 0){
				jokers = 0;
				// viskan nii palju täringuid ükshaaval kui on täringuid ette nähtud (nt 5 asemel 3)
				numbers = new int[dicesTemp]; // hoidik tulemuste jaoks, resetin ära uute jaoks, pikkus vastab täringute arvule
				// reaalne täringute viskamine nii palju arv kordi, kui on täringuid visata
				for(int j=0;j<dicesTemp;j++){
					rollResult = (int)(Math.random()*sides)+1;
					numbers[j]=rollResult;
				} // for
			
				// kontrollin saadud tulemuste massiivi läbi, kui on tahetud number, siis läheb korrektsete sekka
				for(int number : numbers){
					if(number == wantNumber){
						wantNumbers++;
						dicesTemp--; // ühe võrra vähem saan visata täringuid
					}else if(number == jokerNumber){
						jokers++;
					}
				}
				// JÄTA MÄNNAD ALLES:
				
				// JÄTAN ÜHE MÄNNA ALLES // KAHANDAB, HALB!
//				if(jokers == 1){ 
//					dicesTemp--;
//					wantNumbers += 0.5;
//				}
				
//				// JÄTAN KAKS MÄNDA ALLES KUI ESINEB // HEA
//				if(jokers == 2){ 
//					dicesTemp -= 2;
//					wantNumbers++;
//				}
//				// JÄTAN KOLMEST KAKS MÄNDA ALLES
//				if(jokers == 3){
//					dicesTemp -= 2;
//					wantNumbers++;
//				}
				
				triesTemp--;
				// kui on õigeid nii palju kui vaja, siis olen olnud edukas
				
				// TÖÖTAV KOODI KONTROLL:
				if(debug)System.out.print("Saan veel visata: " + triesTemp);
				if(debug)System.out.println(" tulemused: " + Arrays.toString(numbers));
				
				if(wantNumbers >= 2){ //((jokers == 2 && wantNumbers == 1) || (wantNumbers >= 2)){
					totalTimesSuccessful++;
					if(debug)System.out.println("SUCCESSFUL! \n");
					break;
				}
			} // END while
		} // for
		
		System.out.println("\nKokku täringuid visata: " + rolls + " ja see tähendab, et on seeriaid: " + series);
		System.out.println(triesOriginal + " viset " + dicesOriginal + " täringuga " + totalTimesSuccessful); // ja vaja saada "+ goalAmount +" õiget, tulemus: 
		System.out.println("Percentage: " +  ((double) totalTimesSuccessful / (double) series * 100) + "%");

	}
}



//if (){
//	
//}

//int die1;
//int die2;
//int die3;
//int die4;
//int die5;
//int rounds = 0;
//int luckyRoll = 0;
//double probability;

//int want1 = 4;
//int want2 = 4;
//int want3 = 4;
//int want4 = 4;
//int want5 = 4;

// tõenäosus, et kõik 5 on need, mida tahtsid
// sama 4, 3, 2, 1 kohta

// tõenäosus, et kolmest kaks on need, mida tahtsid
// tõenäosus, et kaks täringut, aga üks neist võib olla emb-kumb

// kõik asjad, mida saab "kokku võtta" (korduvad koodis), eraldi meetodisse

// kui aega jääb üle, siis ERALDI KLASS (klass võib klassi sees ka olla) täringu jaoks
// NB! Täringul on kuus tahku, täringul on nimi või number (nt täring 1, täring 2)
// vaja läheb ka getter ja setter meetodeid!!! (neid saab lasta eclipsel ka ise genereerida)




//				System.out.println(Arrays.toString(results));
//			die1 = (int)(Math.random()*numberOfSides)+1;
//			die2 = (int)(Math.random()*numberOfSides)+1;
//			die3 = (int)(Math.random()*numberOfSides)+1;
//			die4 = (int)(Math.random()*numberOfSides)+1;
//			die5 = (int)(Math.random()*numberOfSides)+1;
//			numbers[0]=die1;
//			numbers[1]=die2;
//			numbers[2]=die3;
//			numbers[3]=die4;
//			numbers[4]=die5;






//		int results[] =  new int[numberOfSides];
//		results[4] = 10;
//		results[0]= 3;
// vaja näidata kõik võimalused


//		for(int counter =0; counter<numberOfRolls;counter++){
//			die1 = (int)(Math.random()*numberOfSides)+1;
//			results[counter] = die1;	
//			results[die1-1]++;
//		}
//		System.out.println(Arrays.toString(results));

/*
for(int counter =0; counter<1000000;counter++){
	die1 = (int)(Math.random()*numberOfSides)+1;
	die2 = (int)(Math.random()*numberOfSides)+1;
	die3 = (int)(Math.random()*numberOfSides)+1;
	die4 = (int)(Math.random()*numberOfSides)+1;
	die5 = (int)(Math.random()*numberOfSides)+1;
	rounds++;
	if(die1 == 6){
		results++;
	}

//	if((numberOfDice==5)&&( die1 == 6 && die2 == 6 && die3 == 6 && die4 == 6 && die5 == 6)){
//		luckyRoll++;
//	}else if((numberOfDice==4)&&( die1 == 6 && die2 == 6 && die3 == 6 && die4 == 6)){ 
//		luckyRoll++;
//	}else if((numberOfDice==3)&&( die1 == 6 && die2 == 6 && die3 == 6)){
//		luckyRoll++;
//	}else if ((numberOfDice==2)&&( die1 == 6 && die2 == 6)){
//		luckyRoll++;
//	}else if ((numberOfDice==1)&&( die1 == 6 )){
//		luckyRoll++;
//	}
//}
 */
// for loop
//		luckyRoll*=numberOfTries;
//		System.out.println(numberOfDice + " of the same number");
//		System.out.print("rounds played " + rounds );
//		System.out.println(" rounds won " + luckyRoll);
//		System.out.println("probability: " +(double)luckyRoll/rounds*100 + "%" );